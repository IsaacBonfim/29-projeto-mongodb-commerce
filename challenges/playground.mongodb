// MongoDB Playground

// desafio 1
use("commerce");
db.produtos.countDocuments();

// desafio 2
use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  vendidos: true,
}).sort({
  vendidos: 1,
});

// desafio 3
use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  vendidos: true,
}).sort({
  vendidos: -1,
}).limit(1);

// desafio 4
use("commerce");
db.produtos.find({ 
  $and: [
    { vendidos: { $gt: 50 } },
    { vendidos: { $lt: 100 } }
  ] 
}, {
  _id: false,
  nome: true,
  vendidos: true,
}).sort({ vendidos: 1 });

// desafio 5
use("commerce");
db.produtos.find({
  $or: [
    { curtidas: 36 },
    { vendidos: 85 },
  ],
}, {
  _id: false,
  nome: true,
  curtidas: true,
  vendidos: true,
});

// desafio 6
use("commerce");
db.produtos.find({
  $and: [
    { curtidas: { $gt: 10 } },
    { curtidas: { $lt: 100 } },
  ],
}, {
  _id: false,
  nome: true,
  curtidas: true,
});

// desafio 7
use("commerce");
db.produtos.find({
  $and: [
    { vendidos: { $ne: 50 } },
    { tags: { $exists: false } },
  ],
}, {
  _id: false,
  nome: true,
  vendidos: true,
});

// desafio 8
use("commerce");
db.produtos.deleteMany({
  curtidas: { $lt: 50 },
});

db.produtos.find({}, {
  _id: false,
  nome: true,
});

// desafio 9
use("commerce");
db.produtos.find({
  valoresNutricionais: {
    $elemMatch: {
      tipo: "calorias",
      quantidade: { $lt: 500 },
    },
  },
}, {
  _id: false,
  nome: true,
});

// desafio 10
use("commerce");
db.produtos.find({
  valoresNutricionais: {
    $elemMatch: {
      tipo: "proteínas",
      percentual: { 
        $gte: 30, 
        $lte: 40, 
      },
    },
  }
}, {
  _id: false,
  nome: true,
});

// desafio 11
use("commerce");
db.produtos.find({
  nome: { $nin: ["Big Mac", "McChicken"] },
}, {
  _id: false,
  nome: true,
  curtidas: true,
  vendidos: true,
});

// desafio 12
use("commerce");
db.produtos.updateMany({
  nome: { $ne: "McChicken" },
}, {
  $addToSet: { ingredientes: "ketchup" },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  ingredientes: true,
});

// desafio 13
use("commerce");
db.produtos.updateMany({}, {
  $set: {
    criadoPor: "Ronald McDonald",
  },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  criadoPor: true,
});

// desafio 14
use("commerce");
db.produtos.find({
  ingredientes: "picles",
}, {
  _id: false,
  nome: true,
  ingredientes: true,
  valoresNutricionais: { $slice: 3 },
});

// desafio 15
use("commerce");
db.produtos.updateMany({}, {
  $set: { avaliacao: 0 },
});

use("commerce");
db.produtos.updateMany({
  tags: "bovino",
}, {
  $inc: { avaliacao: 5 },
});

use("commerce");
db.produtos.updateMany({
  tags: "ave",
}, {
  $inc: { avaliacao: 3 },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  avaliacao: true,
});

// desafio 16
use("commerce");
db.produtos.updateOne({
  nome: "Big Mac",
}, {
  $currentDate: {
    ultimaModificacao: true,
  },
});

use("commerce");
db.produtos.find({
  ultimaModificacao: {
    $exists: true,
  },
}, {
  _id: false,
  nome: true,
});

// desafio 17
use("commerce");
db.resumoProdutos.insertOne({
  franquia: "McDonalds",
  totalProdutos: db.produtos.countDocuments({}),
});

use("commerce");
db.resumoProdutos.find({}, {
  _id: false,
});

// desafio 18
use("commerce");
db.produtos.updateMany({
  nome: {
    $in: ["Big Mac", "Quarteirão com Queijo"],
  },
}, {
  $push: {
    ingredientes: "bacon",
  },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  ingredientes: true,
});

// desafio 19
use("commerce");
db.produtos.updateMany({}, {
  $pull: { ingredientes: "cebola" },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  ingredientes: true,
});

// desafio 20
use("commerce");
db.produtos.updateOne({
  nome: "Quarteirão com Queijo",
}, {
  $pop: { ingredientes: -1 },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  ingredientes: true,
});

// desafio 21
use("commerce");
db.produtos.updateOne({
  nome: "Cheddar McMelt",
}, {
  $pop: { ingredientes: 1 },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  ingredientes: true,
});

// desafio 22
use("commerce");
db.produtos.updateMany({}, {
  $set: {
    vendasPorDia: [0, 0, 0, 0, 0, 0, 0],
  },
});

use("commerce");
db.produtos.updateOne({
  nome: "Big Mac",
}, {
  $inc: { "vendasPorDia.3": 60 },
});

use("commerce");
db.produtos.updateOne({
  tags: "bovino",
}, {
  $inc: { "vendasPorDia.6": 120 },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  vendasPorDia: true,
});

// desafio 23
use("commerce");
db.produtos.updateMany({}, {
  $push: {
    tags: {
      $each: ["combo", "tasty"],
      $sort: 1,
    },
  },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  tags: true,
});

// desafio 24
use("commerce");
db.produtos.updateMany({}, {
  $push: {
    valoresNutricionais: {
      $each: [],
      $sort: { percentual: -1 },
    },
  },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  valoresNutricionais: true,
});

// desafio 25
use("commerce");
db.produtos.updateMany({
  valoresNutricionais: {
    $elemMatch: {
      tipo: "sódio",
      percentual: { $gte: 40 },
    },
  },
}, {
  $push: {
    tags: "muito sódio",
  },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  tags: true,
});

// desafio 26
use("commerce");
db.produtos.updateMany({
  valoresNutricionais: {
    $elemMatch: {
      tipo: "sódio",
      percentual: { $lt: 40, $gt: 20 },
    },
  },
}, {
  $push: { tags: "contém sódio" },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  tags: true,
});

// desafio 27
use("commerce");
db.produtos.countDocuments({
  nome: { $regex: /mc/ig },
});

// desafio 28
use("commerce");
db.produtos.countDocuments({
  ingredientes: { $size: 4 },
});

// desafio 29
use("commerce");
db.produtos.updateMany({}, {
  $rename: { descricao: "descricaoSite" },
});

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  descricaoSite: true,
});

// desafio 30
use("commerce");
db.produtos.updateMany(
  { nome: "Big Mac" },
  { $unset: { curtidas: "" } },
);

use("commerce");
db.produtos.find({}, {
  _id: false,
  nome: true,
  curtidas: true,
});
